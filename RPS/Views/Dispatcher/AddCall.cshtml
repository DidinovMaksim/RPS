@model RPS.ValidationModels.CallValidation

<style>
    .autocomplete-suggestions {
        border: 1px solid #999;
        background: #FFF;
        overflow: auto;
    }

    .autocomplete-suggestion {
        padding: 2px 5px;
        white-space: nowrap;
        overflow: hidden;
    }

    .autocomplete-selected {
        background: #F0F0F0;
    }

    .autocomplete-suggestions strong {
        font-weight: normal;
        color: #3399FF;
    }

    .autocomplete-group {
        padding: 2px 5px;
    }

        .autocomplete-group strong {
            display: block;
            border-bottom: 1px solid #000;
        }
</style>

<script>

    var selected = false;

    //Ініціалізація поля з автодоповненням
    $("#autocompleteCustomer").autocomplete({
        source: '/Dispatcher/GetCustomersJSON',
        select: function (event, ui) {
	     //Перенесення ідентифікатора в сховане поле
            document.getElementById('Customer').value = ui.item.value;
            $("#autocompleteCustomer").val(ui.item.label);
            return false;

        },
        change: function (event, ui) {
            //Перевірка валідності введеного клієнта
            selected = (ui.item == null) ? false : true;
        }
    });

    //Перевірка, чи обрав користувач клієнта зі списку
    function CheckIfSelected(data)
    {
    
        if (!selected) {
            //Якщо ні, то виведення вікна з помилкою
            $('#errorMessage').dialog({
                modal: true,
                buttons: {
                    Ok: function () {
                        $(this).dialog('close');
                    }
                }
            });
         
            return false;
        }

    }


</script>

<div id="errorMessage" title="Error" style="display:none">
    <p>Please, choose customer from the list!</p>
</div>

<div id="createCall" >


    @using (@Ajax.BeginForm("AddCall", "Dispatcher", new AjaxOptions()
    {
        OnBegin = "CheckIfSelected",
        OnSuccess = "CallAdded",
        UpdateTargetId = "createCall",
        InsertionMode = InsertionMode.Replace
    }))
    {


        <h1 class="text" id="adding-form-header">Add new call</h1>

        <table>
            <tr>
                <td>
                    <p class="text">Choose customer name: </p>
                </td>
                <td>
                    @Html.HiddenFor(m => m.Customer, new { id = "Customer" })
                    <input type="text" name="Customer1" id="autocompleteCustomer" />
                </td>
            </tr>
            <tr>

                <td>
                    <p class="text">Enter question:</p>
                </td>
                <td>
                    @Html.TextAreaFor(m => m.CallText, new { id = "CallText" })
                </td>
            </tr>
            <tr>
                <td>
                    <p class="text">Choose agent(not required): </p>
                </td>
                <td>
                    @Html.DropDownListFor(m => m.Agent,
                        (IEnumerable<SelectListItem>)ViewData["AgentsList"], new { id = "Agent" })
                </td>
            </tr>
            <tr>
                <td>
                    <input type="submit" id="add-button" class ="btn btn-primary" value="Add new call" />
                </td>
            </tr>
        </table>

    }
</div>
